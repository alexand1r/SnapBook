@model AddPhotoToAlbumViewModel
@{
    ViewData["Title"] = "Add Photo";
}

<h2>Add</h2>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <h4>Add a new photo.</h4>
            <hr/>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" id="lat" asp-for="Latitude"/>
            <input type="hidden" id="lng" asp-for="Longitude"/>
            <div class="form-group">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" rows="10" class="form-control" ></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location"></label>
                <input asp-for="Location" id="autocomplete" class="form-control"/>
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageUrl"></label>
                <input type="file" id="image_selector" />
                <input type="hidden" id="image_url" asp-for="ImageUrl"/>
                <img src="none" class="hidden" id="image_preview" />
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Tags"></label>
                <input asp-for="Tags" class="form-control" placeholder="Example: tag1 tag2 ..."/>
                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-default">Add Photo</button>
        </form>
    </div>
</div>
<script>
    var placeSearch, autocomplete, geocoder;

    function initAutocomplete() {
        geocoder = new google.maps.Geocoder();
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')), {
                types: ['geocode']
            });

        autocomplete.addListener('place_changed', fillInAddress);
    }

    function codeAddress(address) {
        geocoder.geocode({
            'address': address
        }, function(results, status) {
            if (status == 'OK') {
                // This is the lat and lng results[0].geometry.location
                document.getElementById('lat').value = results[0].geometry.location.lat();
                document.getElementById('lng').value = results[0].geometry.location.lng();
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    function fillInAddress() {
        var place = autocomplete.getPlace();

        codeAddress(document.getElementById('autocomplete').value);
    }

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHSXMQomejYqJ-ot8RmH0VJbbC0fZLRhY&libraries=places&callback=initAutocomplete"
        async defer></script>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script>
    var clientid = '30f327ad6d6da1e';
    $("#image_selector").change(function() {
        var reader = new FileReader();
        reader.onload = function(e) {
            var data = e.target.result.substr(e.target.result.indexOf(",") + 1, e.target.result.length);
            $("#image_preview").attr("src", e.target.result);
            $("#image_preview").removeClass('hidden');
            $.ajax({
                url: 'https://api.imgur.com/3/image',
                headers: {
                    'Authorization': 'Client-ID 30f327ad6d6da1e'
                },
                type: 'POST',
                data: {
                    'image': data,
                    'type': 'base64'
                },
                success: function(response) {
                    $("#image_preview").attr("src", response.data.link);
                    $("#image_preview").removeClass('hidden');
                    $("#image_url").attr("value", response.data.link);
                }, error: function() {
                    alert("Error while uploading...");
                }
            });
        };
        reader.readAsDataURL(this.files[0]);
    });
</script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}




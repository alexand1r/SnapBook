@model EditAlbumViewModel
@{
    ViewData["Title"] = "Edit";
}
<h2>Edit</h2>
<div class="row">
    <div class="col-md-4">
        <form method="post">
            
            <h4>Edit album @Model.Title.</h4>
            <hr/>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Title)</label>
                @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Description)</label>
                @Html.TextAreaFor(m => m.Description, new { rows="10", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.CategoryId)</label>
                <select asp-for="CategoryId" asp-items="Model.Categories" class="form-control"></select>
                @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <recaptcha/>
            </div>

            <button type="submit" class="btn btn-default">Edit</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <recaptcha-script />
}



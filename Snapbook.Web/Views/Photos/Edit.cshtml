@model EditPhotoViewModel

@{
    ViewData["Title"] = "Edit Photo";
}

<h2>Edit</h2>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            
            <h4>Edit a photo.</h4>
            <hr/>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" id="lat" asp-for="Latitude"/>

            <input type="hidden" id="lng" asp-for="Longitude"/>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Description)</label>
                @Html.TextAreaFor(m => m.Description, new {rows = "10", @class = "form-control"})
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Location)</label>
                @Html.TextBoxFor(m => m.Location, new {id = "autocomplete", @class = "form-control"})
                @Html.ValidationMessageFor(m => m.Location, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Tags)</label>
                @Html.TextBoxFor(m => m.Tags, new {placeholder = "Example: tag1 tag2 ...", @class = "form-control"})
                @Html.ValidationMessageFor(m => m.Tags, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <recaptcha/>
            </div>

            <button type="submit" class="btn btn-default">Edit</button>
        </form>
    </div>
</div>
<script>
    var placeSearch, autocomplete, geocoder;

    function initAutocomplete() {
        geocoder = new google.maps.Geocoder();
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')), {
                types: ['geocode']
            });

        autocomplete.addListener('place_changed', fillInAddress);
    }

    function codeAddress(address) {
        geocoder.geocode({
            'address': address
        }, function(results, status) {
            if (status == 'OK') {
                // This is the lat and lng results[0].geometry.location
                document.getElementById('lat').value = results[0].geometry.location.lat();
                document.getElementById('lng').value = results[0].geometry.location.lng();
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    function fillInAddress() {
        var place = autocomplete.getPlace();

        codeAddress(document.getElementById('autocomplete').value);
    }

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHSXMQomejYqJ-ot8RmH0VJbbC0fZLRhY&libraries=places&callback=initAutocomplete"
        async defer></script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <recaptcha-script/>
}




@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
            
            <h4>Create a new account.</h4>
            <hr/>

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.UserName)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-user" aria-hidden="true"></i>
                    </div>
                    @Html.TextBoxFor(m => m.UserName, new {@class="form-control"})
                </div>
                @Html.ValidationMessageFor(m => m.UserName, "", new {@class="text-danger"})
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Name)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-user-o" aria-hidden="true"></i>
                    </div>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Email)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-at" aria-hidden="true"></i>
                    </div>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Password)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-unlock-alt" aria-hidden="true"></i>
                    </div>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.ConfirmPassword)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-unlock-alt" aria-hidden="true"></i>
                    </div>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.BirthDate)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </div>
                    <input asp-for="BirthDate" value="@DateTime.Now.AddYears(-6).ToString("yyyy-MM-dd")" class="form-control"/>
                </div>
                @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="checkbox">
                    <label asp-for="IsAdvertiser">
                        <input asp-for="IsAdvertiser"/>
                        @Html.DisplayNameFor(m => m.IsAdvertiser)
                    </label>
                </div>
            </div>

            <div class="form-group">
                <recaptcha/>
            </div>

            <button type="submit" class="btn btn-default">Register</button>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <recaptcha-script/>
}

@using Snapbook.Web.Models.ManageViewModels
@model Snapbook.Web.Models.ManageViewModels.IndexViewModel
@{
    ViewData["Title"] = "Profile";
    ViewData.AddActivePage(ManageNavPages.Index);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)
<div class="row">
    <div class="col-md-6">
        <form method="post">
            
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Username)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-user" aria-hidden="true"></i>
                    </div>
                    @Html.TextBoxFor(m => m.Username, new {disabled = "disabled", @class = "form-control"})
                </div>
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Name)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-user-o" aria-hidden="true"></i>
                    </div>
                    @Html.TextBoxFor(m => m.Name, new {required = "required", @class = "form-control"})
                </div>
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Bio)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-font" aria-hidden="true"></i>
                    </div>
                    @Html.TextAreaFor(m => m.Bio, new {rows = "5", @class = "form-control"})
                </div>
                @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.Email)</label>
                @if (Model.IsEmailConfirmed)
                {
                    <div class="input-group">
                        <input asp-for="Email" required class="form-control"/>
                        <span class="input-group-addon" aria-hidden="true"><span class="glyphicon glyphicon-ok text-success"></span></span>
                    </div>
                }
                else
                {
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-at" aria-hidden="true"></i>
                        </div>
                        @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
                    </div>
                }
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label>@Html.DisplayNameFor(m => m.BirthDate)</label>
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </div>
                    <input asp-for="BirthDate" value="@Model.BirthDate.ToString("yyyy-MM-dd")" type="text" class="datepicker form-control"/>
                </div>
                @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <recaptcha/>
            </div>

            <button type="submit" class="btn btn-default">Save</button>
        </form>
    </div>
</div>

<script>
    $(function () {
        $('.datepicker').datepicker({
            format: 'yyyy-mm-dd',
            showTodayButton: true
        });
    });
</script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <recaptcha-script />
}
